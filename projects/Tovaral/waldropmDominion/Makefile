CFLAGS= -Wall -fpic -coverage -lm -std=c99

rngs.o: rngs.h rngs.c
	gcc -c rngs.c -g  $(CFLAGS)

dominion.o: dominion.h dominion.c rngs.o
	gcc -c dominion.c -g  $(CFLAGS)

playdom: dominion.o playdom.c
	gcc -o playdom playdom.c -g dominion.o rngs.o $(CFLAGS)
#To run playdom you need to entere: ./playdom <any integer number> like ./playdom 10*/
testDrawCard: testDrawCard.c dominion.o rngs.o
	gcc  -o testDrawCard -g  testDrawCard.c dominion.o rngs.o $(CFLAGS)

badTestDrawCard: badTestDrawCard.c dominion.o rngs.o
	gcc -o badTestDrawCard -g  badTestDrawCard.c dominion.o rngs.o $(CFLAGS)

testBuyCard: testDrawCard.c dominion.o rngs.o
	gcc -o testDrawCard -g  testDrawCard.c dominion.o rngs.o $(CFLAGS)

testAll: dominion.o testSuite.c
	gcc -o testSuite testSuite.c -g  dominion.o rngs.o $(CFLAGS)

interface.o: interface.h interface.c
	gcc -c interface.c -g  $(CFLAGS)

runtests: testDrawCard 
	./testDrawCard &> unittestresult.out
	gcov dominion.c >> unittestresult.out
	cat dominion.c.gcov >> unittestresult.out

randomTestAdventurer: randomtestadventurer.c dominion.o rngs.o
	gcc -o randomtestadventurer -g  randomtestadventurer.c dominion.o rngs.o $(CFLAGS)
	
randomTestCard1: randomtestcard1.c dominion.o rngs.o
	gcc -o randomtestcard1 -g  randomtestcard1.c dominion.o rngs.o $(CFLAGS)

randomTestCard2: randomtestcard2.c dominion.o rngs.o
	gcc -o randomtestcard2 -g  randomtestcard2.c dominion.o rngs.o $(CFLAGS)
	
cardTest1: cardtest1.c dominion.o rngs.o
	gcc -o cardtest1 -g cardtest1.c dominion.o rngs.o $(CFLAGS)
	
cardTest2: cardtest2.c dominion.o rngs.o
	gcc -o cardtest2 -g cardtest2.c dominion.o rngs.o $(CFLAGS)

cardTest3: cardtest3.c dominion.o rngs.o
	gcc -o cardtest3 -g cardtest3.c dominion.o rngs.o $(CFLAGS)

cardTest4: cardtest4.c dominion.o rngs.o
	gcc -o cardtest4 -g cardtest4.c dominion.o rngs.o $(CFLAGS)
	
unitTest1: unittest1.c dominion.o rngs.o
	gcc -o unittest1 -g unittest1.c dominion.o rngs.o $(CFLAGS)
	
unitTest2: unittest2.c dominion.o rngs.o
	gcc -o unittest2 -g unittest2.c dominion.o rngs.o $(CFLAGS)
	
unitTest3: unittest3.c dominion.o rngs.o
	gcc -o unittest3 -g unittest3.c dominion.o rngs.o $(CFLAGS)
	
unitTest4: unittest4.c dominion.o rngs.o
	gcc -o unittest4 -g unittest4.c dominion.o rngs.o $(CFLAGS)

randomtestadventurer.out:  randomTestAdventurer
	./randomtestadventurer 3 &> randomtestadventurer.out
	gcov -b dominion.c >> randomtestadventurer.out
	cat dominion.c.gcov >> randomtestadventurer.out

randomtestcard1.out:  randomTestCard1
	./randomtestcard1 5 &> randomtestcard1.out
	gcov -b dominion.c >> randomtestcard1.out
	cat dominion.c.gcov >> randomtestcard1.out

randomtestcard2.out:  randomTestCard2
	./randomtestcard2 3 &> randomtestcard2.out
	gcov -b dominion.c >> randomtestcard2.out
	cat dominion.c.gcov >> randomtestcard2.out

cardtest1.out: 	cardTest1
	./cardtest1 5 &> cardtest1.out
	gcov -b dominion.c >> cardtest1.out
	cat dominion.c.gcov >> cardtest1.out

cardtest2.out: 	cardTest2
	./cardtest2 3 &> cardtest2.out
	gcov -b dominion.c >> cardtest2.out
	cat dominion.c.gcov >> cardtest2.out
	
cardtest2.out: 	cardTest2
	./cardtest2 5 &> cardtest2.out
	gcov -b dominion.c >> cardtest2.out
	cat dominion.c.gcov >> cardtest2.out
	
cardtest3.out: 	cardTest3
	./cardtest3 3 &> cardtest3.out
	gcov -b dominion.c >> cardtest3.out
	cat dominion.c.gcov >> cardtest3.out
	
cardtest4.out: 	cardTest4
	./cardtest4 5 &> cardtest4.out
	gcov -b dominion.c >> cardtest4.out
	cat dominion.c.gcov >> cardtest4.out

unittest1.out: 	unitTest1
	./unittest1 3 &> unittest1.out
	gcov -b dominion.c >> unittest1.out
	cat dominion.c.gcov >> unittest1.out
	
unittest2.out: 	unitTest2
	./unittest2 5 &> unittest2.out
	gcov -b dominion.c >> unittest2.out
	cat dominion.c.gcov >> unittest2.out
	
unittest3.out: 	unitTest3
	./unittest3 3 &> unittest3.out
	gcov -b dominion.c >> unittest3.out
	cat dominion.c.gcov >> unittest3.out
	
unittest4.out: 	unitTest4
	./unittest4 5 &> unittest4.out
	gcov -b dominion.c >> unittest4.out
	cat dominion.c.gcov >> unittest4.out

	
player: player.c interface.o
	gcc -o player player.c -g  dominion.o rngs.o interface.o $(CFLAGS)

all: playdom player 

clean:
	rm -f *.o playdom.exe playdom player player.exe  *.gcov *.gcda *.gcno *.so *.out testDrawCard testDrawCard.exe
